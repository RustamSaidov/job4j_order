spring.datasource.url=jdbc:postgresql://127.0.0.1:5432/order
spring.datasource.username=postgres
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
server.error.include-message=always
#settings of a connection with Kafka:
spring.kafka.producer.bootstrap-servers=localhost:9092
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.producer.properties.spring.json.type.mapping=preorder:ru.job4j.order.model.Order

# ????????? ??? ???????? ????????? ? ????? "preorder"
spring.kafka.consumer.properties.spring.json.type.mapping=cooked_order:ru.job4j.order.model.Order
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=group-id
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

## ????????? ??? ???????? ????????? ? ????? "order_status_notification"
#spring.kafka.producer.order_status_notification.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.order_status_notification.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.producer.order_status_notification.properties.spring.json.type.mapping=order_status_notification:ru.job4j.order.model.OrderStatus




#Log settings:
logging.level.root=warn
logging.level.org.springframework.web=error
logging.level.org.hibernate=error
logging.level.ru.job4j=debug













## ????????? ??? ???????? ????????? ? ????? "preorder"
#spring.kafka.producer.preorder.bootstrap-servers=localhost:9092
#spring.kafka.producer.preorder.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.preorder.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.producer.preorder.properties.spring.json.type.mapping=preorder:ru.job4j.order.model.Order
#
## ????????? ??? ???????? ????????? ? ????? "order_status_notification"
#spring.kafka.producer.order_status_notification.bootstrap-servers=localhost:9092
#spring.kafka.producer.order_status_notification.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.order_status_notification.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#
## ????????? ??? ???????? ????????? ? ????? "user_notification"
#spring.kafka.producer.user_notification.bootstrap-servers=localhost:9092
#spring.kafka.producer.user_notification.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.user_notification.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.producer.user_notification.properties.spring.json.type.mapping=user:ru.job4j.user.model.User
#
## ????????? ??? ????????? ????????? ?? ?????? "order_notification"
#spring.kafka.consumer.order_notification.bootstrap-servers=localhost:9092
#spring.kafka.consumer.order_notification.group-id=group-id
#spring.kafka.consumer.order_notification.auto-offset-reset=earliest
#spring.kafka.consumer.order_notification.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.order_notification.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.order_notification.properties.spring.json.trusted.packages=*
#
## ????????? ??? ????????? ????????? ?? ?????? "user_notification"
#spring.kafka.consumer.user_notification.bootstrap-servers=localhost:9092
#spring.kafka.consumer.user_notification.group-id=group-id
#spring.kafka.consumer.user_notification.auto-offset-reset=earliest
#spring.kafka.consumer.user_notification.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.user_notification.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.user_notification.properties.spring.json.trusted.packages=*
#
## ????????? ??? ???????? ????????? ? ????? "product_notification"
#spring.kafka.producer.product_notification.bootstrap-servers=localhost:9092
#spring.kafka.producer.product_notification.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.product_notification.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.producer.product_notification.properties.spring.json.type.mapping=product:ru.job4j.product.model.Product
#
## ????????? ??? ????????? ????????? ?? ?????? "product_notification"
#spring.kafka.consumer.product_notification.bootstrap-servers=localhost:9092
#spring.kafka.consumer.product_notification.group-id=group-id
#spring.kafka.consumer.product_notification.auto-offset-reset=earliest
#spring.kafka.consumer.product_notification.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.product_notification.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.product_notification.properties.spring.json.trusted.packages=*